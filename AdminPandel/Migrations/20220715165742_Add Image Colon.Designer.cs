// <auto-generated />
using System;
using AdminPandel.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdminPandel.Migrations
{
    [DbContext(typeof(DashboardDbContext))]
    [Migration("20220715165742_Add Image Colon")]
    partial class AddImageColon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdminPandel.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("AdminPandel.Models.Course1", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentCoursesId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("StudentCoursesId");

                    b.ToTable("Course1");
                });

            modelBuilder.Entity("AdminPandel.Models.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Emri");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Mbiemri i Profesorit");

                    b.Property<decimal>("PagaNeto")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId")
                        .IsUnique();

                    b.ToTable("Profesors");
                });

            modelBuilder.Entity("AdminPandel.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("Course1CourseId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("int");

                    b.Property<int>("StatusiStudentit")
                        .HasColumnType("int")
                        .HasComment("1-Aktiv, 3-Pasiv");

                    b.Property<int?>("StudentCoursesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Course1CourseId");

                    b.HasIndex("ProfesorId");

                    b.HasIndex("StudentCoursesId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AdminPandel.Models.StudentCourses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("NumriOreve")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesCourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesCourseId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("AdminPandel.Models.Course1", b =>
                {
                    b.HasOne("AdminPandel.Models.StudentCourses", null)
                        .WithMany("Courses")
                        .HasForeignKey("StudentCoursesId");
                });

            modelBuilder.Entity("AdminPandel.Models.Profesor", b =>
                {
                    b.HasOne("AdminPandel.Models.Course", "Course")
                        .WithOne("Profesor")
                        .HasForeignKey("AdminPandel.Models.Profesor", "CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("AdminPandel.Models.Student", b =>
                {
                    b.HasOne("AdminPandel.Models.Course1", null)
                        .WithMany("Students")
                        .HasForeignKey("Course1CourseId");

                    b.HasOne("AdminPandel.Models.Profesor", "Profesor")
                        .WithMany("Students")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPandel.Models.StudentCourses", null)
                        .WithMany("Students")
                        .HasForeignKey("StudentCoursesId");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("AdminPandel.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPandel.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminPandel.Models.Course", b =>
                {
                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("AdminPandel.Models.Course1", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("AdminPandel.Models.Profesor", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("AdminPandel.Models.StudentCourses", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
